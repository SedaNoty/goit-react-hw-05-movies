{"version":3,"file":"static/js/209.cc7c70e4.chunk.js","mappings":"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","sources":["TMDB_API/TMDB_API.jsx","components/App.styled.js","images/images.js","components/MoviesInfo/MoviesInfo.jsx","pages/MoviesDetails/MoviesDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'c12d1629a8931660f172279bfa95438c';\n\nexport async function getTrending(page) {\n  const url = `/trending/movie/day?api_key=${API_KEY}&page=${page}`;\n\n  const { data } = await axios.get(url);\n  return data.results;\n}\n\nexport async function getMovieDetails(id) {\n  const url = `/movie/${id}?api_key=${API_KEY}`;\n\n  const { data } = await axios.get(url);\n  return data;\n}\n\nexport async function searchMovies(query) {\n  const url = `/search/movie?api_key=${API_KEY}&query=${query}`;\n\n  const { data } = await axios.get(url);\n  return data.results;\n}\n\nexport async function getMovieCredits(id) {\n  const url = `/movie/${id}/credits?api_key=${API_KEY}`;\n\n  const { data } = await axios.get(url);\n  return data.cast;\n}\n\nexport async function getMovieReviews(id) {\n  const url = `/movie/${id}/reviews?api_key=${API_KEY}`;\n\n  const { data } = await axios.get(url);\n  return data.results;\n}","import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const Link = styled(NavLink)`\ndisplay: flex;\n  margin-left: 3px;\n  margin-bottom: 5px;\n  color: #0d253f;\n  font-weight: 500;\n\n  &.active {\n    color: #058bf8;\n  }\n\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n    color: red;\n  }\n`;","import noFoto from './no-image-available.jpg';\n\nexport const imagePast = path => {\n  if (path === null || path === undefined) {\n    return noFoto;\n  }\n\n  return `https://image.tmdb.org/t/p/w300${path}`;\n};","import { useLocation } from 'react-router-dom';\nimport { Link } from 'components/App.styled';\nimport { imagePast } from 'images/images';\n\nconst MoviesInfo = ({ filmInfo }) => {\n  const location = useLocation();\n\n  const {\n    poster_path,\n    title,\n    name,\n    original_title,\n    release_date,\n    first_air_date,\n    overview,\n    vote_average,\n    genres,\n  } = filmInfo;\n\n  return (\n    <div>\n      <div style={{\n       display: 'flex',\n    }}>\n        <img\n          width=\"250px\"\n          src={imagePast(poster_path)}\n          alt={title || name || 'no info'}\n        />\n        <div style={{\n       marginLeft: 20,\n    }}>\n          <h2>\n            {title || name || original_title || 'no info'}\n            <span> {sliceFunction(release_date, first_air_date)}</span>\n          </h2>\n          <p>\n            User Score: <span>{Math.ceil(vote_average * 10)}%</span>\n          </p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <p>{genres.map(genre => genre.name).join(' ')}</p>\n        </div>\n      </div>\n\n      <div>\n        <h3>Additional information</h3>\n        <ul>\n          <li>\n            <Link to=\"cast\" state={{ from: location?.state?.from }}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to=\"reviews\" state={{ from: location?.state?.from }}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nconst sliceFunction = (release_date, first_air_date) => {\n  if (!release_date && !first_air_date) {\n    return '';\n  }\n\n  if (release_date) {\n    return '(' + release_date.slice(0, 4) + ')';\n  }\n\n  return '(' + first_air_date.slice(0, 4) + ')';\n};\n\nexport default MoviesInfo;","import { useState, useEffect, Suspense } from 'react';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { Loader } from 'components/Loader/Loader';\nimport { getMovieDetails } from 'TMDB_API/TMDB_API';\nimport MoviesInfo from 'components/MoviesInfo/MoviesInfo';\nimport { Link } from 'components/App.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [filmInfo, setFilmInfo] = useState(null);\n  const location = useLocation();\n  const backLinkHref = location?.state?.from ?? '/movies';\n\n  useEffect(() => {\n    async function searchFilmsById() {\n      try {\n        const film = await getMovieDetails(movieId);\n\n        setFilmInfo(film);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    searchFilmsById();\n  }, [movieId]);\n\n  if (!filmInfo) {\n    return null;\n  }\n\n  return (\n    <main>\n      <Link to={backLinkHref}>\n        Go back\n      </Link>\n\n      <MoviesInfo filmInfo={filmInfo} state={{ from: location }} />\n\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\n\nexport default MovieDetails;"],"names":["axios","API_KEY","getTrending","page","url","data","results","getMovieDetails","id","searchMovies","query","getMovieCredits","cast","getMovieReviews","Link","styled","NavLink","imagePast","path","undefined","noFoto","sliceFunction","release_date","first_air_date","slice","filmInfo","location","useLocation","poster_path","title","name","original_title","overview","vote_average","genres","style","display","width","src","alt","marginLeft","Math","ceil","map","genre","join","to","state","from","movieId","useParams","useState","setFilmInfo","backLinkHref","useEffect","film","console","log","searchFilmsById","Suspense","fallback","Loader"],"sourceRoot":""}