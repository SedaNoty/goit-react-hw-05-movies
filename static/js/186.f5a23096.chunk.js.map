{"version":3,"file":"static/js/186.f5a23096.chunk.js","mappings":"mTAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAET,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,kFACCC,EADD,sCACsCH,EADtC,iBACsDE,GADtD,SAGkBH,EAAAA,EAAAA,IAAUI,GAH5B,uBAGGC,EAHH,EAGGA,KAHH,kBAIEA,EAAKC,SAJP,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,kFACCJ,EADD,iBACiBI,EADjB,oBAC+BP,GAD/B,SAGkBD,EAAAA,EAAAA,IAAUI,GAH5B,uBAGGC,EAHH,EAGGA,KAHH,kBAIEA,GAJF,kEAOA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,kFACCN,EADD,gCACgCH,EADhC,kBACiDS,GADjD,SAGkBV,EAAAA,EAAAA,IAAUI,GAH5B,uBAGGC,EAHH,EAGGA,KAHH,kBAIEA,EAAKC,SAJP,kEAOA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA+BH,GAA/B,kFACCJ,EADD,iBACiBI,EADjB,4BACuCP,GADvC,SAGkBD,EAAAA,EAAAA,IAAUI,GAH5B,uBAGGC,EAHH,EAGGA,KAHH,kBAIEA,EAAKO,MAJP,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BL,GAA/B,kFACCJ,EADD,iBACiBI,EADjB,4BACuCP,GADvC,SAGkBD,EAAAA,EAAAA,IAAUI,GAH5B,uBAGGC,EAHH,EAGGA,KAHH,kBAIEA,EAAKC,SAJP,kE,+GCcP,UA3CgB,WACd,IAAQQ,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE6BN,EAAAA,EAAAA,IAAgBC,GAF7C,OAEUM,EAFV,OAIIF,EAAWE,GAJf,gDAMIC,QAAQC,IAAR,MANJ,0DADc,uBAAC,WAAD,wBAWdC,EACD,GAAE,CAACT,KAGF,2BACGG,EAAQO,OAAS,IAAK,qEAEtBP,EAAQO,OAAS,IAChB,eACEC,MAAO,CACLC,QAAS,OACTC,IAAK,EACLC,SAAU,OACVC,UAAW,QALf,SAQGZ,EAAQa,KAAI,gBAAGtB,EAAH,EAAGA,GAAIuB,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,2BACE,wBAAKD,GAAU,aACf,uBAAIC,GAAW,cAFRxB,EADE,QAUtB,C","sources":["TMDB_API/TMDB_API.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'c12d1629a8931660f172279bfa95438c';\n\nexport async function getTrending(page) {\n  const url = `/trending/movie/day?api_key=${API_KEY}&page=${page}`;\n\n  const { data } = await axios.get(url);\n  return data.results;\n}\n\nexport async function getMovieDetails(id) {\n  const url = `/movie/${id}?api_key=${API_KEY}`;\n\n  const { data } = await axios.get(url);\n  return data;\n}\n\nexport async function searchMovies(query) {\n  const url = `/search/movie?api_key=${API_KEY}&query=${query}`;\n\n  const { data } = await axios.get(url);\n  return data.results;\n}\n\nexport async function getMovieCredits(id) {\n  const url = `/movie/${id}/credits?api_key=${API_KEY}`;\n\n  const { data } = await axios.get(url);\n  return data.cast;\n}\n\nexport async function getMovieReviews(id) {\n  const url = `/movie/${id}/reviews?api_key=${API_KEY}`;\n\n  const { data } = await axios.get(url);\n  return data.results;\n}","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'TMDB_API/TMDB_API';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    async function searchFilmsById() {\n      try {\n        const filmReview = await getMovieReviews(movieId);\n\n        setReviews(filmReview);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    searchFilmsById();\n  }, [movieId]);\n\n  return (\n    <div>\n      {reviews.length < 1 && <p>We don't have any reviews for this movie.</p>}\n\n      {reviews.length > 0 && (\n        <ul\n          style={{\n            display: 'flex',\n            gap: 6,\n            flexWrap: 'wrap',\n            listStyle: 'none',\n          }}\n        >\n          {reviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <h3>{author || 'no info'}</h3>\n              <p>{content || 'no info'}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;"],"names":["axios","API_KEY","getTrending","page","url","data","results","getMovieDetails","id","searchMovies","query","getMovieCredits","cast","getMovieReviews","movieId","useParams","useState","reviews","setReviews","useEffect","filmReview","console","log","searchFilmsById","length","style","display","gap","flexWrap","listStyle","map","author","content"],"sourceRoot":""}