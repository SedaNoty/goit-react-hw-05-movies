{"version":3,"file":"static/js/273.efe785dc.chunk.js","mappings":"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","sources":["TMDB_API/TMDB_API.jsx","components/App.styled.js","webpack://react-homework-template/./src/components/Searchbar/Searchbar.module.css?8d9e","components/Searchbar/Searchbar.jsx","components/MoviesList/MoviesList.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'c12d1629a8931660f172279bfa95438c';\n\nexport async function getTrending(page) {\n  const url = `/trending/movie/day?api_key=${API_KEY}&page=${page}`;\n\n  const { data } = await axios.get(url);\n  return data.results;\n}\n\nexport async function getMovieDetails(id) {\n  const url = `/movie/${id}?api_key=${API_KEY}`;\n\n  const { data } = await axios.get(url);\n  return data;\n}\n\nexport async function searchMovies(query) {\n  const url = `/search/movie?api_key=${API_KEY}&query=${query}`;\n\n  const { data } = await axios.get(url);\n  return data.results;\n}\n\nexport async function getMovieCredits(id) {\n  const url = `/movie/${id}/credits?api_key=${API_KEY}`;\n\n  const { data } = await axios.get(url);\n  return data.cast;\n}\n\nexport async function getMovieReviews(id) {\n  const url = `/movie/${id}/reviews?api_key=${API_KEY}`;\n\n  const { data } = await axios.get(url);\n  return data.results;\n}","import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const Link = styled(NavLink)`\ndisplay: flex;\n  margin-left: 3px;\n  margin-bottom: 5px;\n  color: #0d253f;\n  font-weight: 500;\n\n  &.active {\n    color: #058bf8;\n  }\n\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n    color: red;\n  }\n`;","// extracted by mini-css-extract-plugin\nexport default {\"SearchForm\":\"Searchbar_SearchForm__XuPyK\",\"SearchForm_button\":\"Searchbar_SearchForm_button__OB9qt\",\"SearchForm_button_label\":\"Searchbar_SearchForm_button_label__s9Ub2\",\"SearchForm_input\":\"Searchbar_SearchForm_input__50Ett\"};","import css from './Searchbar.module.css';\n\nconst Searchbar = ({ onSubmit }) => {\n  return (\n    <form onSubmit={onSubmit} className={css.SearchForm}>\n      <input\n        className={css.SearchForm_input}\n        type=\"text\"\n        name=\"filmInput\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search films\"\n      />\n      <button type=\"submit\" className={css.SearchForm_button}>\n        Search\n      </button>\n    </form>\n  );\n};\n\nexport default Searchbar;","import { useLocation } from 'react-router-dom';\nimport { Link } from 'components/App.styled';\n\nconst MoviesList = ({ moviesSearch }) => {\n  const location = useLocation();\n  \n  return (\n    <ul>\n      {moviesSearch.map(({ id, title, name }) => (\n        <li key={id}>\n          <Link\n            to={`${id}`}\n            state={{ from: location }}\n          >\n            {title || name}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default MoviesList;","import { useState, useEffect, useMemo } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { searchMovies } from 'TMDB_API/TMDB_API';\nimport Searchbar from 'components/Searchbar/Searchbar';\nimport MoviesList from 'components/MoviesList/MoviesList';\n\nconst Movies = () => {\n  const [filmsByQ, setFilmsByQ] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const filmName = searchParams.get('name') ?? '';\n\n  useEffect(() => {\n    if (!filmName) {\n      return;\n    }\n\n    async function fetchFilms() {\n      try {\n        const films = await searchMovies(filmName);\n\n        if (films.length < 1) {\n          return alert(`No films on your query ${filmName}`);\n        }\n\n        setFilmsByQ(films);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    fetchFilms();\n  }, [filmName]);\n\n  const moviesSearch = useMemo(() => {\n    return filmsByQ.filter(film => film.title.toLowerCase().includes(filmName));\n  }, [filmsByQ, filmName]);\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n\n    const form = event.currentTarget;\n    const normilizedValue = form.elements.filmInput.value.toLowerCase();\n\n    if (normilizedValue.trim() === '') {\n      return alert('Please write correct movie name');\n    }\n\n    const searchName =\n      normilizedValue !== '' ? { name: normilizedValue.trim() } : {};\n\n    setSearchParams(searchName);\n  };\n\n  return (\n    <main>\n      <Searchbar onSubmit={handleFormSubmit} />\n\n      {moviesSearch && (\n        <MoviesList moviesSearch={moviesSearch} />\n      )}\n    </main>\n  );\n};\n\nexport default Movies;"],"names":["axios","API_KEY","getTrending","page","url","data","results","getMovieDetails","id","searchMovies","query","getMovieCredits","cast","getMovieReviews","Link","styled","NavLink","onSubmit","className","css","type","name","autoComplete","autoFocus","placeholder","moviesSearch","location","useLocation","map","title","to","state","from","useState","filmsByQ","setFilmsByQ","useSearchParams","searchParams","setSearchParams","filmName","get","useEffect","films","length","alert","console","log","fetchFilms","useMemo","filter","film","toLowerCase","includes","event","preventDefault","normilizedValue","currentTarget","elements","filmInput","value","trim","searchName"],"sourceRoot":""}